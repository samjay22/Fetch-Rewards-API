// Code generated by MockGen. DO NOT EDIT.
// Source: ../Backend/Interfaces/ReceiptService.go

// Package Testing is a generated GoMock package.
package Testing

import (
	Interfaces "Fetch-Rewards-API/Backend/Interfaces"
	Structs "Fetch-Rewards-API/Shared/Structs"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReceiptService is a mock of ReceiptService interface.
type MockReceiptService struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptServiceMockRecorder
}

// MockReceiptServiceMockRecorder is the mock recorder for MockReceiptService.
type MockReceiptServiceMockRecorder struct {
	mock *MockReceiptService
}

// NewMockReceiptService creates a new mock instance.
func NewMockReceiptService(ctrl *gomock.Controller) *MockReceiptService {
	mock := &MockReceiptService{ctrl: ctrl}
	mock.recorder = &MockReceiptServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceiptService) EXPECT() *MockReceiptServiceMockRecorder {
	return m.recorder
}

// GetPointsForReceiptById mocks base method.
func (m *MockReceiptService) GetPointsForReceiptById(id string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPointsForReceiptById", id)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPointsForReceiptById indicates an expected call of GetPointsForReceiptById.
func (mr *MockReceiptServiceMockRecorder) GetPointsForReceiptById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPointsForReceiptById", reflect.TypeOf((*MockReceiptService)(nil).GetPointsForReceiptById), id)
}

// GetReceipts mocks base method.
func (m *MockReceiptService) GetReceipts(ctx context.Context, filterBy *Interfaces.ReceiptFilterRule, page int) (*Interfaces.SearchPagePayload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReceipts", ctx, filterBy, page)
	ret0, _ := ret[0].(*Interfaces.SearchPagePayload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReceipts indicates an expected call of GetReceipts.
func (mr *MockReceiptServiceMockRecorder) GetReceipts(ctx, filterBy, page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReceipts", reflect.TypeOf((*MockReceiptService)(nil).GetReceipts), ctx, filterBy, page)
}

// ProcessReceipt mocks base method.
func (m *MockReceiptService) ProcessReceipt(receiptEntity *Structs.Receipt) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessReceipt", receiptEntity)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessReceipt indicates an expected call of ProcessReceipt.
func (mr *MockReceiptServiceMockRecorder) ProcessReceipt(receiptEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessReceipt", reflect.TypeOf((*MockReceiptService)(nil).ProcessReceipt), receiptEntity)
}
