// Code generated by MockGen. DO NOT EDIT.
// Source: ../Backend/Interfaces/ItemService.go

// Package Testing is a generated GoMock package.
package Testing

import (
	Structs "Fetch-Rewards-API/Shared/Structs"
	sql "database/sql"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockItemService is a mock of ItemService interface.
type MockItemService struct {
	ctrl     *gomock.Controller
	recorder *MockItemServiceMockRecorder
}

// MockItemServiceMockRecorder is the mock recorder for MockItemService.
type MockItemServiceMockRecorder struct {
	mock *MockItemService
}

// NewMockItemService creates a new mock instance.
func NewMockItemService(ctrl *gomock.Controller) *MockItemService {
	mock := &MockItemService{ctrl: ctrl}
	mock.recorder = &MockItemServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemService) EXPECT() *MockItemServiceMockRecorder {
	return m.recorder
}

// GenerateItemIds mocks base method.
func (m *MockItemService) GenerateItemIds(items []Structs.PurchasedItem) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GenerateItemIds", items)
}

// GenerateItemIds indicates an expected call of GenerateItemIds.
func (mr *MockItemServiceMockRecorder) GenerateItemIds(items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateItemIds", reflect.TypeOf((*MockItemService)(nil).GenerateItemIds), items)
}

// GetItemsForReceipt mocks base method.
func (m *MockItemService) GetItemsForReceipt(db *sql.DB, receiptId string) ([]Structs.PurchasedItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItemsForReceipt", db, receiptId)
	ret0, _ := ret[0].([]Structs.PurchasedItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItemsForReceipt indicates an expected call of GetItemsForReceipt.
func (mr *MockItemServiceMockRecorder) GetItemsForReceipt(db, receiptId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItemsForReceipt", reflect.TypeOf((*MockItemService)(nil).GetItemsForReceipt), db, receiptId)
}

// InsertItems mocks base method.
func (m *MockItemService) InsertItems(tx *sql.Tx, receiptId string, items []Structs.PurchasedItem) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertItems", tx, receiptId, items)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertItems indicates an expected call of InsertItems.
func (mr *MockItemServiceMockRecorder) InsertItems(tx, receiptId, items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertItems", reflect.TypeOf((*MockItemService)(nil).InsertItems), tx, receiptId, items)
}
