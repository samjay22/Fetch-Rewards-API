// Code generated by MockGen. DO NOT EDIT.
// Source: ../Backend/Interfaces/PointsService.go

// Package Testing is a generated GoMock package.
package Testing

import (
	Structs "Fetch-Rewards-API/Shared/Structs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPointsService is a mock of PointsService interface.
type MockPointsService struct {
	ctrl     *gomock.Controller
	recorder *MockPointsServiceMockRecorder
}

// MockPointsServiceMockRecorder is the mock recorder for MockPointsService.
type MockPointsServiceMockRecorder struct {
	mock *MockPointsService
}

// NewMockPointsService creates a new mock instance.
func NewMockPointsService(ctrl *gomock.Controller) *MockPointsService {
	mock := &MockPointsService{ctrl: ctrl}
	mock.recorder = &MockPointsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPointsService) EXPECT() *MockPointsServiceMockRecorder {
	return m.recorder
}

// CalculatePoints mocks base method.
func (m *MockPointsService) CalculatePoints(receipt *Structs.Receipt) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculatePoints", receipt)
	ret0, _ := ret[0].(int)
	return ret0
}

// CalculatePoints indicates an expected call of CalculatePoints.
func (mr *MockPointsServiceMockRecorder) CalculatePoints(receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculatePoints", reflect.TypeOf((*MockPointsService)(nil).CalculatePoints), receipt)
}
